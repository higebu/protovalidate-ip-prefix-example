// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: proto/example/v1/example.proto

package examplev1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddIPv4AddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddIPv4AddressRequest) Reset() {
	*x = AddIPv4AddressRequest{}
	mi := &file_proto_example_v1_example_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddIPv4AddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIPv4AddressRequest) ProtoMessage() {}

func (x *AddIPv4AddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_example_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIPv4AddressRequest.ProtoReflect.Descriptor instead.
func (*AddIPv4AddressRequest) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_example_proto_rawDescGZIP(), []int{0}
}

func (x *AddIPv4AddressRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddIPv4AddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type AddIPv4AddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddIPv4AddressResponse) Reset() {
	*x = AddIPv4AddressResponse{}
	mi := &file_proto_example_v1_example_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddIPv4AddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIPv4AddressResponse) ProtoMessage() {}

func (x *AddIPv4AddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_example_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIPv4AddressResponse.ProtoReflect.Descriptor instead.
func (*AddIPv4AddressResponse) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_example_proto_rawDescGZIP(), []int{1}
}

func (x *AddIPv4AddressResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddIPv4AddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type AddIPv6AddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddIPv6AddressRequest) Reset() {
	*x = AddIPv6AddressRequest{}
	mi := &file_proto_example_v1_example_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddIPv6AddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIPv6AddressRequest) ProtoMessage() {}

func (x *AddIPv6AddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_example_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIPv6AddressRequest.ProtoReflect.Descriptor instead.
func (*AddIPv6AddressRequest) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_example_proto_rawDescGZIP(), []int{2}
}

func (x *AddIPv6AddressRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddIPv6AddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type AddIPv6AddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddIPv6AddressResponse) Reset() {
	*x = AddIPv6AddressResponse{}
	mi := &file_proto_example_v1_example_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddIPv6AddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIPv6AddressResponse) ProtoMessage() {}

func (x *AddIPv6AddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_example_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIPv6AddressResponse.ProtoReflect.Descriptor instead.
func (*AddIPv6AddressResponse) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_example_proto_rawDescGZIP(), []int{3}
}

func (x *AddIPv6AddressResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddIPv6AddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type AddIPv4RouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Prefix  string `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Nexthop string `protobuf:"bytes,3,opt,name=nexthop,proto3" json:"nexthop,omitempty"`
}

func (x *AddIPv4RouteRequest) Reset() {
	*x = AddIPv4RouteRequest{}
	mi := &file_proto_example_v1_example_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddIPv4RouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIPv4RouteRequest) ProtoMessage() {}

func (x *AddIPv4RouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_example_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIPv4RouteRequest.ProtoReflect.Descriptor instead.
func (*AddIPv4RouteRequest) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_example_proto_rawDescGZIP(), []int{4}
}

func (x *AddIPv4RouteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddIPv4RouteRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *AddIPv4RouteRequest) GetNexthop() string {
	if x != nil {
		return x.Nexthop
	}
	return ""
}

type AddIPv4RouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Prefix  string `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Nexthop string `protobuf:"bytes,3,opt,name=nexthop,proto3" json:"nexthop,omitempty"`
}

func (x *AddIPv4RouteResponse) Reset() {
	*x = AddIPv4RouteResponse{}
	mi := &file_proto_example_v1_example_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddIPv4RouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIPv4RouteResponse) ProtoMessage() {}

func (x *AddIPv4RouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_example_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIPv4RouteResponse.ProtoReflect.Descriptor instead.
func (*AddIPv4RouteResponse) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_example_proto_rawDescGZIP(), []int{5}
}

func (x *AddIPv4RouteResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddIPv4RouteResponse) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *AddIPv4RouteResponse) GetNexthop() string {
	if x != nil {
		return x.Nexthop
	}
	return ""
}

type AddIPv6RouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Prefix  string `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Nexthop string `protobuf:"bytes,3,opt,name=nexthop,proto3" json:"nexthop,omitempty"`
}

func (x *AddIPv6RouteRequest) Reset() {
	*x = AddIPv6RouteRequest{}
	mi := &file_proto_example_v1_example_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddIPv6RouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIPv6RouteRequest) ProtoMessage() {}

func (x *AddIPv6RouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_example_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIPv6RouteRequest.ProtoReflect.Descriptor instead.
func (*AddIPv6RouteRequest) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_example_proto_rawDescGZIP(), []int{6}
}

func (x *AddIPv6RouteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddIPv6RouteRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *AddIPv6RouteRequest) GetNexthop() string {
	if x != nil {
		return x.Nexthop
	}
	return ""
}

type AddIPv6RouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Prefix  string `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Nexthop string `protobuf:"bytes,3,opt,name=nexthop,proto3" json:"nexthop,omitempty"`
}

func (x *AddIPv6RouteResponse) Reset() {
	*x = AddIPv6RouteResponse{}
	mi := &file_proto_example_v1_example_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddIPv6RouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIPv6RouteResponse) ProtoMessage() {}

func (x *AddIPv6RouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_example_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIPv6RouteResponse.ProtoReflect.Descriptor instead.
func (*AddIPv6RouteResponse) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_example_proto_rawDescGZIP(), []int{7}
}

func (x *AddIPv6RouteResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddIPv6RouteResponse) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *AddIPv6RouteResponse) GetNexthop() string {
	if x != nil {
		return x.Nexthop
	}
	return ""
}

var File_proto_example_v1_example_proto protoreflect.FileDescriptor

var file_proto_example_v1_example_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x11, 0x68, 0x69, 0x67, 0x65, 0x62, 0x75, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x4f, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x49, 0x50, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xba, 0x48, 0x05, 0x72, 0x03, 0xd8, 0x01, 0x01, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x46, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x49, 0x50, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4f, 0x0a, 0x15, 0x41, 0x64, 0x64,
	0x49, 0x50, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xe0, 0x01,
	0x01, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x46, 0x0a, 0x16, 0x41, 0x64,
	0x64, 0x49, 0x50, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x6e, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x49, 0x50, 0x76, 0x34, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba,
	0x48, 0x05, 0x72, 0x03, 0xf0, 0x01, 0x01, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12,
	0x21, 0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x78, 0x01, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x68,
	0x6f, 0x70, 0x22, 0x5c, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x49, 0x50, 0x76, 0x34, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70,
	0x22, 0x6f, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x49, 0x50, 0x76, 0x36, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05,
	0x72, 0x03, 0xf8, 0x01, 0x01, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x22, 0x0a,
	0x07, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xba, 0x48, 0x05, 0x72, 0x03, 0x80, 0x01, 0x01, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f,
	0x70, 0x22, 0x5c, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x49, 0x50, 0x76, 0x36, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70, 0x32,
	0xa8, 0x03, 0x0a, 0x0e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x67, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x49, 0x50, 0x76, 0x34, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x2e, 0x68, 0x69, 0x67, 0x65, 0x62, 0x75, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x50, 0x76, 0x34,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x68, 0x69, 0x67, 0x65, 0x62, 0x75, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x50, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x49, 0x50, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x2e,
	0x68, 0x69, 0x67, 0x65, 0x62, 0x75, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x50, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x68, 0x69, 0x67, 0x65, 0x62, 0x75,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x49,
	0x50, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x49, 0x50, 0x76, 0x34, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x68, 0x69, 0x67, 0x65, 0x62, 0x75, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x50, 0x76, 0x34,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x68,
	0x69, 0x67, 0x65, 0x62, 0x75, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x49, 0x50, 0x76, 0x34, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x49, 0x50,
	0x76, 0x36, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x68, 0x69, 0x67, 0x65, 0x62, 0x75,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x49,
	0x50, 0x76, 0x36, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x68, 0x69, 0x67, 0x65, 0x62, 0x75, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x50, 0x76, 0x36, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x56, 0x5a, 0x54, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x69, 0x67, 0x65, 0x62, 0x75, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x69, 0x70,
	0x2d, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x2d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x68, 0x69, 0x67, 0x65, 0x62, 0x75, 0x2f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_example_v1_example_proto_rawDescOnce sync.Once
	file_proto_example_v1_example_proto_rawDescData = file_proto_example_v1_example_proto_rawDesc
)

func file_proto_example_v1_example_proto_rawDescGZIP() []byte {
	file_proto_example_v1_example_proto_rawDescOnce.Do(func() {
		file_proto_example_v1_example_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_example_v1_example_proto_rawDescData)
	})
	return file_proto_example_v1_example_proto_rawDescData
}

var file_proto_example_v1_example_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_example_v1_example_proto_goTypes = []any{
	(*AddIPv4AddressRequest)(nil),  // 0: higebu.example.v1.AddIPv4AddressRequest
	(*AddIPv4AddressResponse)(nil), // 1: higebu.example.v1.AddIPv4AddressResponse
	(*AddIPv6AddressRequest)(nil),  // 2: higebu.example.v1.AddIPv6AddressRequest
	(*AddIPv6AddressResponse)(nil), // 3: higebu.example.v1.AddIPv6AddressResponse
	(*AddIPv4RouteRequest)(nil),    // 4: higebu.example.v1.AddIPv4RouteRequest
	(*AddIPv4RouteResponse)(nil),   // 5: higebu.example.v1.AddIPv4RouteResponse
	(*AddIPv6RouteRequest)(nil),    // 6: higebu.example.v1.AddIPv6RouteRequest
	(*AddIPv6RouteResponse)(nil),   // 7: higebu.example.v1.AddIPv6RouteResponse
}
var file_proto_example_v1_example_proto_depIdxs = []int32{
	0, // 0: higebu.example.v1.ExampleService.AddIPv4Address:input_type -> higebu.example.v1.AddIPv4AddressRequest
	2, // 1: higebu.example.v1.ExampleService.AddIPv6Address:input_type -> higebu.example.v1.AddIPv6AddressRequest
	4, // 2: higebu.example.v1.ExampleService.AddIPv4Route:input_type -> higebu.example.v1.AddIPv4RouteRequest
	6, // 3: higebu.example.v1.ExampleService.AddIPv6Route:input_type -> higebu.example.v1.AddIPv6RouteRequest
	1, // 4: higebu.example.v1.ExampleService.AddIPv4Address:output_type -> higebu.example.v1.AddIPv4AddressResponse
	3, // 5: higebu.example.v1.ExampleService.AddIPv6Address:output_type -> higebu.example.v1.AddIPv6AddressResponse
	5, // 6: higebu.example.v1.ExampleService.AddIPv4Route:output_type -> higebu.example.v1.AddIPv4RouteResponse
	7, // 7: higebu.example.v1.ExampleService.AddIPv6Route:output_type -> higebu.example.v1.AddIPv6RouteResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_example_v1_example_proto_init() }
func file_proto_example_v1_example_proto_init() {
	if File_proto_example_v1_example_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_example_v1_example_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_example_v1_example_proto_goTypes,
		DependencyIndexes: file_proto_example_v1_example_proto_depIdxs,
		MessageInfos:      file_proto_example_v1_example_proto_msgTypes,
	}.Build()
	File_proto_example_v1_example_proto = out.File
	file_proto_example_v1_example_proto_rawDesc = nil
	file_proto_example_v1_example_proto_goTypes = nil
	file_proto_example_v1_example_proto_depIdxs = nil
}
